{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6feb27d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter( contact => contact.id !== action.payload )\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = { \n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n        this.setState({contacts: res.data})\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context';\nimport axios from 'axios'\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => { \n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({type: 'DELETE_CONTACT', payload: id})\n        \n    }\n\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>Name: {name} <i onClick={ () => this.setState({ showContactInfo: !this.state.showContactInfo })} \n                                className=\"fas fa-sort-down\"\n                                style={{ cursor: 'pointer'}} \n                            />\n                            <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red'}}\n                                onClick={this.onDeleteClick.bind(this,id,dispatch)}\n                            />\n                            <Link to={`contact/edit/${id}`}>\n                                <i \n                                    className=\"fas fa-pencil-alt\"\n                                    style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'black',\n                                        marginRight: '1rem'\n                                    }}>\n                                    \n                                </i>\n                            </Link>\n                            </h4>\n                            {showContactInfo ? (\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>\n                            ) : null }\n                            \n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render() {\n\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map( contact => (\n                                <Contact \n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg', {\n                'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({ [e.target.name] : e.target.value });\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        // Check for Errors\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        \n        dispatch({\n            type: 'ADD_CONTACT',\n            payload: res.data\n        })\n\n        \n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                        <div className=\"card-header\">\n                            Add Contact\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                <TextInputGroup \n                                    label=\"name\"\n                                    name=\"name\"\n                                    placeholder=\"enter name\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n                                <TextInputGroup \n                                    label=\"email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"enter email\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n                                <TextInputGroup \n                                    label=\"phone\"\n                                    name=\"phone\"\n                                    placeholder=\"enter phone\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n                                \n                                <input \n                                    type=\"submit\"\n                                    value=\"Add Contact\"\n                                    className=\"btn btn-light btn-block\"\n                                    />\n                            </form>\n                        </div>\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({ [e.target.name] : e.target.value });\n    \n    async componentDidMount() {\n        const { id } = this.props.match.params\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        // Check for Errors\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return;\n        }\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                        <div className=\"card-header\">\n                            Edit Contact\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                <TextInputGroup \n                                    label=\"name\"\n                                    name=\"name\"\n                                    placeholder=\"enter name\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n                                <TextInputGroup \n                                    label=\"email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"enter email\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n                                <TextInputGroup \n                                    label=\"phone\"\n                                    name=\"phone\"\n                                    placeholder=\"enter phone\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n                                \n                                <input \n                                    type=\"submit\"\n                                    value=\"Update Contact\"\n                                    className=\"btn btn-light btn-block\"\n                                    />\n                            </form>\n                        </div>\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}